{
  "version": "2.0.0",
  "tasks": [
    {
      "label": "Add Shebang if missing",
      "type": "process",
      "command": "/bin/bash",
      "args": [
        "-c",
        "if ! grep -q '^#!' \"${file}\"; then sed -i '' '1i\\#!/usr/bin/env zsh' \"${file}\"; fi"
      ],
      "presentation": {
        "echo": true,
        "reveal": "never",
        "panel": "shared"
      },
      "problemMatcher": []
    },
    {
      "label": "Fix endif to fi",
      "type": "process",
      "command": "/usr/bin/sed",
      "args": [
        "-i", "''",
        "s/\\<endif\\>/fi/g",
        "${file}"
      ],
      "presentation": { "reveal": "never" },
      "problemMatcher": []
    },
    {
      "label": "Insert missing then",
      "type": "process",
      "command": "/bin/bash",
      "args": [
        "-c",
        "sed -i '' -E 's/^(\\s*if[^;]*)(;?)$/\\1 then\\2/' \"${file}\""
      ],
      "presentation": { "reveal": "never" },
      "problemMatcher": []
    },
    {
      "label": "Un-brace stray else",
      "type": "process",
      "command": "/usr/bin/sed",
      "args": [
        "-i", "''",
        "s/^\\s*}\\s*else\\s*{\\s*$/else/",
        "${file}"
      ],
      "presentation": { "reveal": "never" },
      "problemMatcher": []
    },
    {
      "label": "ShellCheck script",
      "type": "shell",
      "command": "/opt/homebrew/bin/shellcheck",
      "args": [
        "-s", "bash",
        "-f", "gcc",
        "${file}"
      ],
      "group": { "kind": "test", "isDefault": false },
      "presentation": { "reveal": "silent" },
      "problemMatcher": {
        "owner": "shellcheck",
        "fileLocation": ["absolute"],
        "pattern": {
          "regexp": "^(.*):(\\d+):(\\d+): (.+)$",
          "file": 1,
          "line": 2,
          "column": 3,
          "message": 4
        }
      }
    },
    {
      "label": "Auto-fix & Lint Shell Script",
      "dependsOrder": "sequence",
      "dependsOn": [
        "Add Shebang if missing",
        "Fix endif to fi",
        "Insert missing then",
        "Un-brace stray else",
        "ShellCheck script"
      ],
      "group": { "kind": "build", "isDefault": true },
      "problemMatcher": []
    },
    {
      "label": "Validate tasks.json",
      "type": "shell",
      "command": "jq",
      "args": ["empty", "${workspaceFolder}/.vscode/tasks.json"],
      "presentation": { "reveal": "never" },
      "problemMatcher": []
    },
    {
      "label": "Format tasks.json",
      "type": "shell",
      "command": "npx",
      "args": ["prettier", "--write", "${workspaceFolder}/.vscode/tasks.json"],
      "presentation": { "reveal": "never" },
      "problemMatcher": []
    },
    {
      "label": "Run nextLevel3.sh",
      "type": "process",
      "command": "/bin/bash",
      "args": [
        "-c",
        "/bin/bash \"${workspaceFolder}/nextLevel3.sh\" --verbose"
      ],
      "presentation": {
        "echo": true,
        "reveal": "always",
        "panel": "dedicated"
      },
      "problemMatcher": []
    }
  ]
}
// This tasks.json file is designed to automate the process of linting and formatting shell scripts.